@page "/meeting/room/{id:int}"

@using Microsoft.AspNetCore.SignalR.Client
@using System.ComponentModel.DataAnnotations
@inject NavigationManager _navigationManager

<h3 class="t">Meeting Room</h3>
<AuthorizeView Roles="User, Admin">
    <Authorized Context="Auth">
        <div class="container d-flex justify-content-center">
            <div class="card mt-5">
                <div class="d-flex flex-row justify-content-between p-3 adiv text-white"> <i class="fas fa-chevron-left"></i> <span class="pb-3">Czat na żywo</span> <i class="fas fa-times"></i> </div>
                <div class="d-flex flex-row p-3">
                    <div class="message">
                        <Virtualize Items="Messages.OrderBy(m => m.Date).ToList()" Context="message">
                            <li>@message.Name : @message.Message </li>
                        </Virtualize>
                    </div>
                </div>
                <div class="form-group px-3">
                    <EditForm Model="newChatMessage" OnValidSubmit="SendMessage">
                        <DataAnnotationsValidator />
                        @{newChatMessage.Name = Auth.User.Identity.Name;}
                        <InputTextArea class="form-control" @bind-Value="newChatMessage.Message" placeholder="Wpisz wiadomość"></InputTextArea>
                        <div class="space">


                        </div>
                        <button class="btn btn-primary btn-md active" type="submit">Wyślij</button>
                    </EditForm>
                </div>
                <div class="d-flex flex-row justify-content-between p-3 adiv2 text-white"> <i class="fas fa-chevron-left"></i> <span class="pb-3">Czat na żywo</span> <i class="fas fa-times"></i> </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        Nie masz uprawnień
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter]
    public int id { get; set; }

    List<ChatMessage> Messages = new List<ChatMessage>();
    HubConnection hubConnection;
    ChatMessage newChatMessage = new ChatMessage();

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(_navigationManager.BaseUri + "hubs/Chathub")
            .Build();

        hubConnection.On<string, string>("SendMessage", (name, message) =>
        {
            var chatMessage = new ChatMessage() { Name = name, Message = message, Date = DateTime.Now };
            Messages.Add(chatMessage);
            StateHasChanged();
        });
        await hubConnection.StartAsync();
    }

    public class ChatMessage //zmiana na messagedto
    {
        [Required]
        public string Name { get; set; }
        [Required]
        public string Message { get; set; }
        public DateTime Date { get; set; }
    }

    public async Task SendMessage()
    {
        await hubConnection.SendAsync("SendMessage", newChatMessage.Name, newChatMessage.Message);
        newChatMessage.Message = "";
    }
}